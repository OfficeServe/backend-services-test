server {
  http {
    host = "0.0.0.0"
    port = 9001
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logger-startup-timeout = 30s
}

report {
  ttl {
    pendingMessage = "3 minutes"  // Maximum time needed for computing a message. This should be >= SQS In flight time
    processedMessage = "2 days"   // Duplicate messages timeframe. Receiving the same message at any time longer than that will be considered as a new message
  }
  document {
    invoice {
      email {
        from = "support@officeserve.com"
        bcc = "n.cavallo@officeserve.com,p.rascuna@officeserve.com,m.ahmed@officeserve.com"
        subject = "OfficeServe Invoice"
      }
    }
    receipt {
      email {
        from = "support@officeserve.com"
        bcc = "n.cavallo@officeserve.com,p.rascuna@officeserve.com,m.ahmed@officeserve.com"
        subject = "OfficeServe Receipt"
      }
    }
    cancellation {
      email {
        from = "support@officeserve.com"
        bcc = "n.cavallo@officeserve.com,p.rascuna@officeserve.com,m.ahmed@officeserve.com"
        subject = "OfficeServe Cancellation"
      }
    }
    deliveryNote {
      email {
        from = "support@officeserve.com"
        to = "n.cavallo@officeserve.com,p.rascuna@officeserve.com,m.ahmed@officeserve.com"
        bcc = "n.cavallo@officeserve.com,p.rascuna@officeserve.com,m.ahmed@officeserve.com"
        subject = "OfficeServe Delivery Note"
        defaultBody = "Please find attached the delivery notes for tomorrow"
      }
    }
    productReport {
      email {
        from = "support@officeserve.com"
        to = "n.cavallo@officeserve.com,p.rascuna@officeserve.com,m.ahmed@officeserve.com"
        bcc = "n.cavallo@officeserve.com,p.rascuna@officeserve.com,m.ahmed@officeserve.com"
        subject = "OfficeServe Product Report"
        defaultBody = "Please find attached the product report"
      }
    }
  }
}
aws {
  sqs {
    queueUrl = "http://127.0.0.1:9494/local_report-service-queue"
    maxMessages = 10 // Max number of messages read from SQS. The upper limit is 10
    fetchingInterval = "5 seconds"
    sendMessageTimeout = "20 seconds"
  }
  redis {
    host = "localhost"
    port = 6379
  }
  sns {
    endpoint = "http://127.0.0.1:9911"
    topicArn {
      email = "arn:aws:sns:eu-west-1:064345613152:local_emails"
    }
  }
  dynamodb {
    endpoint = "http://127.0.0.1:8001"
    tablePrefix = "local-"
  }
}
document-service-api {
  baseUrl = "http://127.0.0.1:9000"
}
